# Production Dockerfile for Nuru AI Direct Orchestrator Service
# Comprehensive event extraction with monitoring and database integration
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies for production
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy centralized requirements file (enterprise architecture)
COPY requirements.txt ./

# Install Python dependencies with optimization
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install additional production dependencies for orchestrator
# Use exact versions from API requirements for consistency
RUN pip install --no-cache-dir \
    fastapi>=0.110.0 \
    uvicorn[standard]>=0.29.0 \
    aiohttp==3.9.1 \
    beautifulsoup4==4.12.2 \
    google-cloud-aiplatform>=1.45.0 \
    supabase>=2.3.1 \
    httpx>=0.27.0 \
    google-cloud-monitoring>=2.22.0 \
    google-cloud-logging>=3.9.0 \
    playwright==1.41.2

# Copy application code in correct order
COPY src/extraction/utils/ ./utils/
COPY src/api/ ./chatbot_api/
COPY src/extraction/agents/ ./agents/
COPY src/extraction/scripts/ ./scripts/
COPY src/extraction/enhanced_orchestrator.py ./

# Create empty __init__.py files to make Python modules
RUN touch ./utils/__init__.py ./chatbot_api/__init__.py ./agents/__init__.py ./scripts/__init__.py ./scripts/orchestrator/__init__.py

# Set environment variables for production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PORT=8080
ENV LOG_TO_JSON=true
ENV LOG_LEVEL=INFO

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash app
RUN chown -R app:app /app
USER app

# Expose port
EXPOSE 8080

# Health check endpoint
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the enhanced orchestrator service
CMD ["python", "-m", "uvicorn", "scripts.orchestrator.production_enhanced_orchestrator_service:app", "--host", "0.0.0.0", "--port", "8080", "--workers", "1"]
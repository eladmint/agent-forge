# Cloud Build configuration for Nuru AI Direct Orchestrator Production Service
# Builds and deploys the comprehensive extraction service with monitoring

steps:
  # Build the orchestrator container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'deployment/docker/Dockerfile.orchestrator',
      '-t', 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:latest',
      '.'
    ]
    id: 'build-orchestrator'

  # Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:$BUILD_ID']
    id: 'push-orchestrator'

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'nuru-ai-orchestrator',
      '--image', 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:$BUILD_ID',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '900',
      '--concurrency', '10',
      '--max-instances', '5',
      '--set-env-vars', 'LOG_TO_JSON=true,LOG_LEVEL=INFO',
      '--service-account', 'nuru-ai-production@$PROJECT_ID.iam.gserviceaccount.com'
    ]
    id: 'deploy-orchestrator'

  # Health check will be performed post-deployment

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  logging: CLOUD_LOGGING_ONLY

# Timeout for entire build
timeout: '1200s'

# No substitutions needed

# Images to push to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/nuru-ai-orchestrator:latest'

# Build triggers
# This configuration supports manual triggers and webhook triggers
# from the Cloud Build console or API
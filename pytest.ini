[pytest]
# PyTest configuration for Agent Forge testing

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirements
minversion = 6.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    -ra
    --cov=core
    --cov=examples
    --cov-report=term-missing
    --cov-report=html:tests/reports/coverage
    --cov-report=xml:tests/reports/coverage.xml

# Test paths
testpaths = tests

# Exclude paths from test collection
norecursedirs = archive .git __pycache__ *.egg dist build node_modules
# Exclude specific test files in examples directory that are not unit tests
# Exclude glob patterns
collect_ignore_glob = ["archive/**/*", "archive/**/test_*.py"]

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer than normal to run
    network: Tests that require network connectivity
    mock: Tests using mocked dependencies
    blockchain: Tests for blockchain integration functionality
    security: Tests for security features
    performance: Tests for performance optimization
    coordination: Tests for multi-agent coordination
    resilience: Tests for failure scenarios

# Logging configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
asyncio_default_test_loop_scope = function

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning  
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestDeprecationWarning